#!/bin/bash
# laravel-mysql-export
# prepared by dicky@bitzen19.com
# last update: May 6th, 2021

# check whether user is root or superuser
if [ $(id -u) -eq 0 ]; then
  echo ""
  echo "Please run this script as normal user or sudoer."
  echo "Running this script as root or superuser is prohibited."
  echo ""
  exit
fi

if ! mysqldump --version > /dev/null 2>&1; then
  echo ""
  echo "mysqldump is not installed."
  echo "Please install mysql (at least client) before running this script."
  echo ""
  exit
fi

if ! which zip > /dev/null 2>&1; then
  echo ""
  echo "zip is not installed."
  echo "Please install zip before running this script."
  echo ""
  exit
fi

SOURCE_DIR=$(dirname "$0")

# default project folder
PROJECT_ROOT_FOLDER=/var/www/html

if [ ! -d "$PROJECT_ROOT_FOLDER" ]; then
  PROJECT_ROOT_FOLDER=/var/www
fi

# overwrite PROJECT_ROOT_FOLDER from file "laravel-setting.env" at the same folder if exists
if [ -f "$SOURCE_DIR/laravel-setting.env" ]; then
  . "$SOURCE_DIR/laravel-setting.env"
fi

if [ ! -d "$PROJECT_ROOT_FOLDER" ]; then
  echo ""
  echo "Can not find project root folder: $PROJECT_ROOT_FOLDER"
  if [ ! -f "$SOURCE_DIR/laravel-setting.env" ]; then
    echo ""
    echo "The defaut project root folder is: $PROJECT_ROOT_FOLDER"
    echo "if you want to change defaut project root folder, do the following:"
    echo "1. create file: $SOURCE_DIR/laravel-setting.env"
    echo "2. add line:"
    echo "   PROJECT_ROOT_FOLDER=[ your project root ]"
    echo "3. Save the file."
    echo "4. Re-run this script"
  fi
  echo ""
  exit
fi

PROJECT_DIRS_COUNT=$(find "$PROJECT_ROOT_FOLDER" -mindepth 1 -maxdepth 1 -type d | wc -l)
if [ $PROJECT_DIRS_COUNT -eq 0 ]; then
  echo ""
  echo "No subfolder found under project root folder:"
  echo "$PROJECT_ROOT_FOLDER"
  echo ""
  exit
fi

ENV_FILES_COUNT=$(find "$PROJECT_ROOT_FOLDER" -mindepth 2 -maxdepth 2 -type f -name .env | wc -l)

if [ $ENV_FILES_COUNT -eq 0 ]; then
  echo ""
  echo "No .env files found under project root folder:"
  echo "$PROJECT_ROOT_FOLDER"
  echo ""
  exit
fi

ENV_FILES=$(find "$PROJECT_ROOT_FOLDER" -mindepth 2 -maxdepth 2 -type f -name .env)

if [ -z "$1" ]; then
  echo ""
  echo "USAGE:"
  echo "laravel-mysql-export [project-dir]"
  echo ""
  echo "*[project-dir] must be subfolder of $PROJECT_ROOT_FOLDER"
  echo ""
  echo "example(s):"

  find ${ENV_FILES} |
  while read filename
    do
      PROJECT_DIR1=$(dirname "$filename" | xargs basename)
      echo "laravel-mysql-export $PROJECT_DIR1"
    done

  echo ""
  exit
fi

PROJECT_DIR="$1"
if [ ! -d "$PROJECT_ROOT_FOLDER/$PROJECT_DIR" ]; then
  echo ""
  echo "Can not find project dir: "$PROJECT_ROOT_FOLDER/$PROJECT_DIR""
  echo ""
  echo "correct example(s):"

  find ${ENV_FILES} |
  while read filename
    do
      PROJECT_DIR1=$(dirname "$filename" | xargs basename)
      echo "laravel-mysql-export $PROJECT_DIR1"
    done
  echo ""
  exit
fi

ENV_FILE="$PROJECT_ROOT_FOLDER/$PROJECT_DIR/.env"

if [ ! -f  "$ENV_FILE" ]; then
  echo ""
  echo "Can not find laravel project .env file:"
  echo "$ENV_FILE"
  echo ""
  exit
fi

if [ "$(file -b --mime-type $ENV_FILE)" != "text/plain" ]; then
  echo ""
  echo ".env file must be in text format:"
  echo "$ENV_FILE"
  echo ""
  exit
fi

# script started here

# ExtractEnvValue [key] [.env file]
function ExtractEnvValue() {
  if [ -z $1 ]; then
    echo ""
  else
    if [ -z $2 ]; then
      echo ""
    else
      if [ -f $2 ]; then
        echo $(sed -n "s/^$1[ ]*=//p" $2 | xargs)
      else
        echo ""
      fi
    fi
  fi
}

DB_CONNECTION=$(ExtractEnvValue DB_CONNECTION "$ENV_FILE")
if [ $DB_CONNECTION != "mysql" ]; then
  echo ""
  echo ".env file: $ENV_FILE"
  echo "DB_CONNECTION value must be: mysql"
  echo "Detected DB_CONNECTION: $DB_CONNECTION"
  echo ""
  exit
fi

DB_HOST=$(ExtractEnvValue DB_HOST "$ENV_FILE")
DB_PORT=$(ExtractEnvValue DB_PORT "$ENV_FILE")
DB_DATABASE=$(ExtractEnvValue DB_DATABASE "$ENV_FILE")
DB_USERNAME=$(ExtractEnvValue DB_USERNAME "$ENV_FILE")
DB_PASSWORD=$(ExtractEnvValue DB_PASSWORD "$ENV_FILE")

if [ -z "$DB_HOST" ]; then
  echo ""
  echo ".env file: $ENV_FILE"
  echo "DB_HOST must be set."
  echo ""
  exit
fi

if [ -z "$DB_PORT" ]; then
  echo ""
  echo ".env file: $ENV_FILE"
  echo "DB_PORT must be set."
  echo ""
  exit
fi

if [ -z "$DB_DATABASE" ]; then
  echo ""
  echo ".env file: $ENV_FILE"
  echo "DB_DATABASE must be set."
  echo ""
  exit
fi

if [ -z "$DB_USERNAME" ]; then
  echo ""
  echo ".env file: $ENV_FILE"
  echo "DB_USERNAME must be set."
  echo ""
  exit
fi

BACKUP_TIME=$(date +%Y-%m-%d_%H-%M)

if [ -z "$EXPORT_FOLDER" ]; then
  # default export folder
  EXPORT_FOLDER="$HOME/backup/data"

  if [ ! -d "$HOME/backup" ]; then
    mkdir "$HOME/backup"
  fi

  if [ ! -d "$HOME/backup/data" ]; then
    mkdir "$HOME/backup/data"
  fi
fi

if [ ! -d "$EXPORT_FOLDER" ]; then
  echo ""
  echo "Export folder doesn't exist:"
  echo "$EXPORT_FOLDER"
  echo ""
  exit
fi

RESULT_EXPORT="$EXPORT_FOLDER/mysql-$DB_DATABASE-$BACKUP_TIME.sql"

# export DB_PASSWORD as MYSQL_PWD global var so mysqldump doesn't ask for pass word
export MYSQL_PWD="$DB_PASSWORD"

rm -f $RESULT_EXPORT
rm -f "$RESULT_EXPORT.zip"

# run mysqldump with previous set params
mysqldump -h "$DB_HOST" -u "$DB_USERNAME" --port "$DB_PORT" "$DB_DATABASE" --no-tablespaces --no-create-db --complete-insert --skip-add-locks --skip-extended-insert > "$RESULT_EXPORT"

if [ "$?" -ne 0 ]; then
  # contains error
  echo ""
  echo "error running mysqldump:"
  echo "mysqldump -h $DB_HOST -u $DB_USERNAME$MYSQL_PORT $DB_DATABASE --no-tablespaces --no-create-db --complete-insert --skip-add-locks --skip-extended-insert > $RESULT_EXPORT"
  rm -f "$RESULT_EXPORT"
else
  if [ -f "$RESULT_EXPORT" ]; then
    if [ "$2" != "nozip" ]; then
      EXPORT_FILE=$(basename -- "$RESULT_EXPORT")
      ZIP_FILE="$EXPORT_FILE.zip"
      cd "$EXPORT_FOLDER"
      zip -9 "$ZIP_FILE" "$EXPORT_FILE"
      rm -f "$EXPORT_FILE"
      echo ""
      if [ -f "$EXPORT_FOLDER/$ZIP_FILE" ]; then
        echo "Mysql database has been successfully exported as:"
        echo "$RESULT_EXPORT.zip"
        chmod 777 "$RESULT_EXPORT.zip"
      else
        echo "ERROR: Failed to create export zip file:"
        echo "$EXPORT_FOLDER/$ZIP_FILE"
      fi
    else
      echo ""
      echo "Mysql database has been successfully exported as:"
      echo "$RESULT_EXPORT"
      chmod 777 "$RESULT_EXPORT"
    fi
  else
    echo ""
    echo "ERROR: Failed to create export file:"
    echo "$RESULT_EXPORT"
  fi
  echo ""
fi

# reset MYSQL_PWD global var
export MYSQL_PWD=""
